// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class ObjectData
{
	[System.Serializable]
	public class Info
	{
		public int ID;
		public string Name_Eng;
		public string Name_Kor;
		public E_Object_Type Object_Type;
		public E_UseTool Use_Tool;
		public int Craft_Place;
		public ItemDropInfo[] DropArr;
		public SourceInfo[] SourceArr;
		public float Gathering_Time;
		public int Fatigue_Reduction;
		public int Craft_Fatigue;
		public int Sound;
	}

	List<Info> rowList = new List<Info>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Info> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Info row = new Info();
			row.ID = int.Parse(grid[i][0]);
			row.Name_Eng = grid[i][1];
			row.Name_Kor = grid[i][2];
			row.Object_Type = (E_Object_Type)int.Parse(grid[i][3]);
			row.Use_Tool = (E_UseTool)int.Parse(grid[i][4]);
			row.Craft_Place = int.Parse(grid[i][5]);

			row.DropArr = new ItemDropInfo[4];
			row.DropArr[0].itemID = int.Parse(grid[i][6]);
			row.DropArr[0].Percent = int.Parse(grid[i][7]);
			row.DropArr[0].count = int.Parse(grid[i][8]);

			row.DropArr[1].itemID = int.Parse(grid[i][9]);
			row.DropArr[1].Percent = int.Parse(grid[i][10]);
			row.DropArr[1].count = int.Parse(grid[i][11]);

			row.DropArr[2].itemID = int.Parse(grid[i][12]);
			row.DropArr[2].Percent = int.Parse(grid[i][13]);
			row.DropArr[2].count = int.Parse(grid[i][14]);

			row.DropArr[3].itemID = int.Parse(grid[i][15]);
			row.DropArr[3].Percent = int.Parse(grid[i][16]);
			row.DropArr[3].count = int.Parse(grid[i][17]);

			row.SourceArr = new SourceInfo[7];
			row.SourceArr[0].ItemID = int.Parse(grid[i][18]);
			row.SourceArr[0].count = int.Parse(grid[i][19]);

			row.SourceArr[1].ItemID = int.Parse(grid[i][20]);
			row.SourceArr[1].count = int.Parse(grid[i][21]);

			row.SourceArr[2].ItemID = int.Parse(grid[i][22]);
			row.SourceArr[2].count = int.Parse(grid[i][23]);

			row.SourceArr[3].ItemID = int.Parse(grid[i][24]);
			row.SourceArr[3].count = int.Parse(grid[i][25]);

			row.SourceArr[4].ItemID = int.Parse(grid[i][26]);
			row.SourceArr[4].count = int.Parse(grid[i][27]);

			row.SourceArr[5].ItemID = int.Parse(grid[i][28]);
			row.SourceArr[5].count = int.Parse(grid[i][29]);

			row.SourceArr[6].ItemID = int.Parse(grid[i][30]);
			row.SourceArr[6].count = int.Parse(grid[i][31]);

			row.Gathering_Time = float.Parse(grid[i][32]);
			row.Fatigue_Reduction = int.Parse(grid[i][33]);
			row.Craft_Fatigue = int.Parse(grid[i][34]);

			row.Sound = int.Parse(grid[i][35]);

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Info GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Info Find_ID(int find)
	{
		return rowList.Find(x => x.ID == find);
	}
	public List<Info> FindAll_ID(int find)
	{
		return rowList.FindAll(x => x.ID == find);
	}
	public Info Find_Name_Eng(string find)
	{
		return rowList.Find(x => x.Name_Eng == find);
	}
	public List<Info> FindAll_Name_Eng(string find)
	{
		return rowList.FindAll(x => x.Name_Eng == find);
	}
	public Info Find_Name_Kor(string find)
	{
		return rowList.Find(x => x.Name_Kor == find);
	}
	public List<Info> FindAll_Name_Kor(string find)
	{
		return rowList.FindAll(x => x.Name_Kor == find);
	}
	public Info Find_Object_Type(E_Object_Type find)
	{
		return rowList.Find(x => x.Object_Type == find);
	}
	public List<Info> FindAll_Object_Type(E_Object_Type find)
	{
		return rowList.FindAll(x => x.Object_Type == find);
	}
	public Info Find_Use_Tool(E_UseTool find)
	{
		return rowList.Find(x => x.Use_Tool == find);
	}
	public List<Info> FindAll_Use_Tool(E_UseTool find)
	{
		return rowList.FindAll(x => x.Use_Tool == find);
	}
	public Info Find_Craft_Place(int find)
	{
		return rowList.Find(x => x.Craft_Place == find);
	}
	public List<Info> FindAll_Craft_Place(int find)
	{
		return rowList.FindAll(x => x.Craft_Place == find);
	}
	public Info Find_Gathering_Time(int find)
	{
		return rowList.Find(x => x.Gathering_Time == find);
	}
	public List<Info> FindAll_Gathering_Time(int find)
	{
		return rowList.FindAll(x => x.Gathering_Time == find);
	}
	public Info Find_Fatigue_Reduction(int find)
	{
		return rowList.Find(x => x.Fatigue_Reduction == find);
	}
	public List<Info> FindAll_Fatigue_Reduction(int find)
	{
		return rowList.FindAll(x => x.Fatigue_Reduction == find);
	}
	public Info Find_Craft_Fatigue(int find)
	{
		return rowList.Find(x => x.Craft_Fatigue == find);
	}
	public List<Info> FindAll_Craft_Fatigue(int find)
	{
		return rowList.FindAll(x => x.Craft_Fatigue == find);
	}

}